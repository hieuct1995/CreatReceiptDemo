<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link rel="stylesheet"
            href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css"
            integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm"
            crossorigin="anonymous">
        <link rel="stylesheet"
            href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
        <title>Demo</title>
    </head>
    <body>
        <nav class="navbar navbar-expand-lg navbar-light bg-light fixed-top">
            <a class="navbar-brand" href="#">Home</a>
            <button class="navbar-toggler" type="button" data-toggle="collapse"
                data-target="#navbarSupportedContent"
                aria-controls="navbarSupportedContent" aria-expanded="false"
                aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <div class="d-flex justify-content-between px-lg-5 w-100">
                    <div>
                        <form class="form-inline my-2 my-lg-0">
                            <input class="form-control mr-sm-2" type="search"
                                placeholder="Search" aria-label="Search"
                                name="search">
                            <button class="btn btn-outline-success my-2 my-sm-0"
                                type="submit">Search</button>
                        </form>
                    </div>
                    <div>
                        <ul class="navbar-nav mr-auto">
                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle" href="#"
                                    id="navbarDropdown" role="button"
                                    data-toggle="dropdown" aria-haspopup="true"
                                    aria-expanded="false">
                                    Demo
                                </a>
                                <div class="dropdown-menu"
                                    aria-labelledby="navbarDropdown">
                                    <a class="dropdown-item"
                                        href="api/receipts/list">Danh sách phiếu</a>
                                </div>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </nav>
        <div class="container" style="margin-top: 5rem;">
            <div class="card">
                <div
                    class="card-header text-center font-weight-bold text-uppercase">
                    Thêm phiếu mới
                </div>
                <div class="card-body">
                    <form method="post" action id="myForm">
                        <div class="form-row">
                            <div class="form-group col-md-4">
                                <label for="inputDepartment">Đơn vị</label>
                                <select id="inputDepartment"
                                    class="form-control input-data"
                                    name="department">
                                    <option disabled selected>Chọn đơn vị</option>
                                    <% departments.forEach(department => { %>
                                    <option value="<%= department.id %>"><%=
                                        department.department_name %></option>
                                    <% }) %>
                                </select>
                            </div>
                            <div class="form-group col-md-4">
                                <label for="inputPratitive">Bộ phận</label>
                                <select id="inputPratitive"
                                    class="form-control input-data"
                                    disabled name="pratitive">
                                    <option selected>Chọn bộ phận</option>
                                </select>
                            </div>
                            <div class="form-group col-md-4">
                                <label for="inputDate">Ngày tạo</label>
                                <input type="date"
                                    class="form-control input-data"
                                    id="inputDate" placeholder="Ngày tạo"
                                    name="create_at">
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group col-md-4">
                                <label for="inputWarehouse">Kho nhập</label>
                                <select id="inputWarehouse"
                                    class="form-control input-data"
                                    name="warehouse">
                                    <option value disabled selected>Chọn kho
                                        nhập</option>
                                    <% warehouses.forEach(warehouse => { %>
                                    <option value="<%= warehouse.id %>"
                                        data-location="<%= warehouse.location %>"><%=
                                        warehouse.name %></option>
                                    <% }) %>
                                </select>
                            </div>
                            <div class="form-group col-md-6">
                                <label for="inputLocation">Địa điểm</label>
                                <input type="text" class="form-control"
                                    id="inputLocation" placeholder="Trống"
                                    readonly name="locationData">
                            </div>
                            <div class="form-group col-md-2">
                                <label for="inputNumber">Số phiếu</label>
                                <input type="number"
                                    class="form-control input-data"
                                    id="inputNumber" placeholder="Số phiếu"
                                    name="code_number">
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group col-md-3">
                                <label for="inputDeliverer">Người giao hàng</label>
                                <input type="text"
                                    class="form-control input-data"
                                    id="inputDeliverer"
                                    placeholder="Người giao hàng"
                                    name="deliverer">
                            </div>
                            <div class="form-group col-md-3">
                                <label for="inputCreator">Người lập phiếu</label>
                                <input type="text"
                                    class="form-control input-data"
                                    id="inputCreator"
                                    placeholder="Người lập phiếu" name="creator">
                            </div>
                            <div class="form-group col-md-3">
                                <label for="inputStocker">Thủ kho</label>
                                <input type="text"
                                    class="form-control input-data"
                                    id="inputStocker" placeholder="Thủ kho"
                                    name="stocker">
                            </div>
                            <div class="form-group col-md-3">
                                <label for="inputAccountant">Kế toán trưởng</label>
                                <input type="text"
                                    class="form-control input-data"
                                    id="inputAccountant"
                                    placeholder="Kế toán trưởng"
                                    name="chiefAccountant">
                            </div>
                        </div>
                        <input type="hidden" name="localStorageData"
                            id="localStorageData">

                        <div class="form-group">
                            <div class="mb-2">Danh mục sản phẩm</div>
                            <div class="table-responsive">
                                <table class="table table-bordered text-center"
                                    id="inputProducts">
                                    <thead>
                                        <tr>
                                            <th scope="col" rowspan="2"
                                                class="align-middle">STT</th>
                                            <th scope="col" rowspan="2"
                                                class="align-middle col-2">Tên
                                                nhãn hiệu,
                                                vật tư, hàng hóa</th>
                                            <th scope="col" rowspan="2"
                                                class="align-middle col-1">Mã số</th>
                                            <th scope="col" rowspan="2"
                                                class="align-middle col-1">Đơn
                                                vị tính</th>
                                            <th scope="col" colspan="2"
                                                class="align-middle col-3">Số
                                                lượng</th>
                                            <th scope="col" rowspan="2"
                                                class="align-middle col-2">Đơn
                                                giá</th>
                                            <th scope="col" rowspan="2"
                                                class="align-middle col-2">Thành
                                                tiền (đ)</th>
                                            <th scope="col" rowspan="2"
                                                class="align-middle col-1">Lựa
                                                chọn</th>
                                        </tr>
                                        <tr>
                                            <td>Theo chứng từ</td>
                                            <td>Thực nhận</td>
                                        </tr>
                                    </thead>
                                    <tbody>
                                    </tbody>
                                </table>
                            </div>

                            <div class="d-flex justify-content-between">
                                <button type="button" class="btn btn-primary"
                                    style="visibility: hidden;" id="saveDataBtn">
                                    Xong
                                </button>
                                <button type="button" class="btn btn-info"
                                    style="display: none;" id="editDataBtn">
                                    Sửa
                                </button>
                                <div class="my-auto font-weight-bold">
                                    Tổng tiền:
                                    <span id="totalAmount"> 0 </span> VNĐ
                                </div>
                                <button type="button" class="btn btn-primary"
                                    id="addRowBtn">
                                    Thêm sản phẩm
                                </button>
                            </div>
                        </div>
                        <div class="text-center border-top pt-3">
                            <button type="submit" disabled
                                class="btn btn-success w-50 py-2" id="submitBtn">THÊM
                                MỚI</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </body>

    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"
        integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN"
        crossorigin="anonymous">
    </script>
    <script
        src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js"
        integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q"
        crossorigin="anonymous">
    </script>
    <script
        src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js"
        integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl"
        crossorigin="anonymous">
    </script>

    <script>
        let inputDepartment = document.getElementById("inputDepartment");
        let inputPratitive = document.getElementById("inputPratitive");
    
        inputDepartment.addEventListener("change", function() {
            let selectedDepartmentId = inputDepartment.value;
            inputPratitive.innerHTML = '<option value="" disabled selected>Chọn bộ phận</option>';
            const origin = location.origin;
            if (selectedDepartmentId) {
                fetch(`${origin}/api/departments/${selectedDepartmentId}/pratitives`)
                    .then(response => response.json())
                    .then(data => {
                        console.log(data);
                        data.pratitives.forEach(pratitive => {
                            let option = document.createElement("option");
                            option.value = pratitive.id;
                            option.text = pratitive.pratitive_name;
                            inputPratitive.appendChild(option);
                        });
                        inputPratitive.disabled = false;
                    })
                    .catch(error => {
                        console.error('Lỗi khi tải dữ liệu pratitve:', error);
                    });
            } else {
                inputPratitive.disabled = true;
            }
        });
    </script>

    <script>
        let inputWarehouse = document.getElementById("inputWarehouse");
        let inputLocation = document.getElementById("inputLocation");

        inputWarehouse.addEventListener("change", function() {
            let selectedWarehouse = inputWarehouse.options[inputWarehouse.selectedIndex];
            let dataLocation = selectedWarehouse.getAttribute("data-location");
            
            inputLocation.value = dataLocation;
        });
    </script>

    <script>
        let addRowBtn = document.getElementById('addRowBtn');
        addRowBtn.addEventListener('click', function() {
            let table = document.getElementById('inputProducts').getElementsByTagName('tbody')[0];
            let saveDataTableBtn = document.getElementById('saveDataBtn');
            saveDataTableBtn.style.visibility = 'visible';
            let newRow = table.insertRow(table.rows.length);
            let index = table.rows.length - 1;

            let cell1 = newRow.insertCell(0);
            let cell2 = newRow.insertCell(1);
            let cell3 = newRow.insertCell(2);
            let cell4 = newRow.insertCell(3);
            let cell5 = newRow.insertCell(4);
            let cell6 = newRow.insertCell(5);
            let cell7 = newRow.insertCell(6);
            let cell8 = newRow.insertCell(7);
            let cell9 = newRow.insertCell(8);

            cell1.innerHTML = index;
            cell1.className = 'align-middle';
            cell2.innerHTML = `<input type="text" class="form-control input-table" id="products-${index}-name">`;
            cell3.innerHTML = `<input type="text" class="form-control input-table" id="products-${index}-code>">`;
            cell4.innerHTML = `<input type="text" class="form-control input-table" id="products-${index}-unit>">`;
            cell5.innerHTML = `<input type="number" oninput="calculate(${index})" class="form-control input-table" id="products-${index}-quantity_invoice>">`;
            cell6.innerHTML = `<input type="number" class="form-control input-table" id="products-${index}-quantity_received>">`;
            cell7.innerHTML = `<input type="text" oninput="calculate(${index})" class="form-control input-table" id="products-${index}-price">`;
            cell8.innerHTML = 0;
            cell8.id = `totalPrice-${index}`;
            cell8.className = 'align-middle';
            let deleteButton = document.createElement('a');
            deleteButton.href = '#';
            deleteButton.className = 'btn btn-danger deleteRow';
            deleteButton.innerHTML = '<i class="fa-solid fa-trash-can"></i>';
            deleteButton.onclick = function() {
            deleteRow(this.closest('tr'));
            return false;
            };

            cell9.appendChild(deleteButton);

            function deleteRow(row) {
                var tableData = row.closest('tbody');
                tableData.removeChild(row);
                if (table.rows.length === 0) {
                    saveDataTableBtn.style.visibility = 'hidden';
                }
            }
        });
    </script>
    <script>
        function calculate(index) {
            let table = document.getElementById('inputProducts').getElementsByTagName('tbody')[0];
            let priceInput = document.getElementById(`products-${index}-price`);
            let quantity_on_note = document.getElementById(`products-${index}-quantity_invoice>`);
            let total_price = document.getElementById(`totalPrice-${index}`)

            let price = parseFloat(priceInput.value) || 0;
            if (price < 0) {
                price = 0;
                priceInput.value = 0;
            }
            let quantityOnNote = parseFloat(quantity_on_note.value) || 0;
            if (quantityOnNote < 0) {
                quantityOnNote = 0;
                quantity_on_note.value = 0;
            }
            let totalPrice = price * quantityOnNote;
            total_price.innerHTML = totalPrice.toLocaleString();

            let totalAmount = 0;
            let rows = table.getElementsByTagName('tr');
            for (let i = 0; i < rows.length; i++) {
                let rowCells = rows[i].getElementsByTagName('td');
                let rowPrice = parseFloat(rowCells[6].getElementsByTagName('input')[0].value) || 0;
                let rowQuantity = parseFloat(rowCells[4].getElementsByTagName('input')[0].value) || 0;
                totalAmount += rowPrice * rowQuantity;
            }
            document.getElementById('totalAmount').innerHTML = totalAmount.toLocaleString()
        }
    </script>

    <script>
        let saveDataTableBtn =  document.getElementById('saveDataBtn');
        let editDataTableBtn =  document.getElementById('editDataBtn');
        let submitBtn =  document.getElementById('submitBtn');

        function validateInputFields() {
            let inputElements = document.querySelectorAll('.input-table, .input-data');
            let isValid = true;

            inputElements.forEach(function(inputElement) {
                if (inputElement.value.trim() === '') {
                isValid = false;
                }
            });

            return isValid;
        }

        saveDataTableBtn.addEventListener('click', function() {
            if (!validateInputFields()) {
                alert('Vui lòng điền đủ thông tin vào các ô input và ô select.');
                return;
            }

            saveTableDataToLocalStorage();
            submitBtn.disabled = false;
            saveDataTableBtn.style.display = 'none';
            editDataTableBtn.style.display = 'block';
            let inputElements = document.querySelectorAll('.input-table');
            inputElements.forEach(function(inputElement) {
                inputElement.readOnly = true;
            });
            let deleteElements = document.querySelectorAll('.deleteRow');
            deleteElements.forEach(function(deleteElement) {
                deleteElement.style.display = 'none';
            });
            document.getElementById('addRowBtn').style.visibility  = 'hidden';
        })

        editDataTableBtn.addEventListener('click', function() {
            submitBtn.disabled = true;
            editDataTableBtn.style.display = 'none';
            saveDataTableBtn.style.display = 'block';
            let inputElements = document.querySelectorAll('.input-table');
            inputElements.forEach(function(inputElement) {
                inputElement.readOnly = false;
            });
            let deleteElements = document.querySelectorAll('.deleteRow');
            deleteElements.forEach(function(deleteElement) {
                deleteElement.style.display = 'block';
            });
            document.getElementById('addRowBtn').style.visibility  = 'visible';
        })

        function saveTableDataToLocalStorage() {
            let tableRows = document.getElementById('inputProducts').getElementsByTagName('tbody')[0].getElementsByTagName('tr');
            let productList = [];

            for (let i = 0; i < tableRows.length; i++) {
                let cells = tableRows[i].getElementsByTagName('td');
                
                let product = {
                    name: cells[1].getElementsByTagName('input')[0].value,
                    code: cells[2].getElementsByTagName('input')[0].value,
                    unit: cells[3].getElementsByTagName('input')[0].value,
                    quantityOnNote: parseFloat(cells[4].getElementsByTagName('input')[0].value) || 0,
                    quantityReal: parseFloat(cells[5].getElementsByTagName('input')[0].value) || 0,
                    price: parseFloat(cells[6].getElementsByTagName('input')[0].value) || 0,
                };

                productList.push(product);
            }

            localStorage.setItem('productList', JSON.stringify(productList));
        }
    </script>

    <script>
        let myForm = document.getElementById('myForm');
        myForm.addEventListener('submit', function(e) {
            e.preventDefault();
            let localStorageData = localStorage.getItem('productList');
            // document.getElementById('localStorageData').value = localStorageData;
            // myForm.submit();
            let department = document.getElementById('inputDepartment').value;
            let pratitive = document.getElementById('inputPratitive').value;
            let create_at = document.getElementById('inputDate').value;
            let warehouse = document.getElementById('inputWarehouse').value;
            let code_number = document.getElementById('inputNumber').value;
            let deliverer = document.getElementById('inputDeliverer').value;
            let creator = document.getElementById('inputCreator').value;
            let stocker = document.getElementById('inputStocker').value;
            let chiefAccountant = document.getElementById('inputAccountant').value;

            let data = {
                department, pratitive, create_at, warehouse, code_number, deliverer, creator, stocker, chiefAccountant, localStorageData
            }
            const origin = location.origin
            fetch(`${origin}/api/receipts/create`, {
                method: 'POST',
                headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ data })
            }).then(response => {
                if (response.ok) {
                    alert("Tạo phiếu thành công!");
                    localStorage.removeItem('productList');
                    return response.json();
                }
                if (response.status === 400) {
                    alert("Yêu cầu không hợp lệ. Kiểm tra lại dữ liệu!");
                    return;
                }
                if (response.status === 409) {
                    alert("Mã phiếu đã tồn tại!");
                    return;
                }
                throw new Error('Phản hồi lỗi.');
                alert("Phản hồi lỗi.");
            }).then(data => {
                console.log(data);
            }).catch(error => {
                console.error('Xảy ra lỗi:', error);
                alert("Đã xảy ra lỗi!")
            });   
        })
    </script>
</html>